@model Categoria

@{
	ViewData["Title"] = "Editar categoria";
}

<h1>Editar Categoria</h1>
<h5>La categoria nos permie indicar en que gastamos nuestro dinero</h5>


<form asp-controller="Categorias" asp-action="Editar">
	<div asp-validation-summary="ModelOnly" class="text-danger"></div> <!--ModelOnly Muestra errores generales, no ligados a ninguna propiedad, estos errores pueden venir de cualquier parte, pero lo mas comun es que venga del controlador-->

	<input type="hidden" asp-for="Id"/>

	<div class="mb-3">
		<label asp-for="Nombre" class="form-label"></label>
		<input asp-for="Nombre" class="form-control" />
		<span asp-validation-for="Nombre" class="text-danger"></span> <!--Muestra mensajes de error de las validaciones del MODELO , de una propiedad especifica, en este caso "Nombre"-->
	</div>
	<div class="mb-3">
		<label asp-for="TipoOperacionId" class="form-label"></label>
		<select asp-for="TipoOperacionId" asp-items="Html.GetEnumSelectList<TipoOperacion>()" class="form-select"></select> <!-- genera automáticamente una lista de SelectListItem a partir de un enum llamado TipoOperacion-->
		<span asp-validation-for="TipoOperacionId" class="text-danger"></span> <!--Muestra mensajes de error de las validaciones del MODELO , de una propiedad especifica, en este caso "TipoOperacionId"-->
	</div>
	<button class="btn btn-primary">Enviar</button>
	<a class="btn btn-secondary" asp-controller="Categorias" asp-action="Index">Cancelar</a>
</form>

@section Scripts {
	<!--En el archivo Layout.cshtml este section se ubica al final de los scripts en RenderSectionAsync
	Gracias a este section nos permite hacer las validaciones antes de enviar el POST
	en pocas palabras hace las validaciones en el front
	-->
	<partial name="_ValidationScriptsPartial" />
}